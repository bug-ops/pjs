name: PJS JavaScript Client CI

on:
  push:
    branches: [ main, develop, feature/v* ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

env:
  NODE_VERSION: '18'
  REGISTRY_URL: 'https://registry.npmjs.org'

jobs:
  test:
    name: Test on Node.js ${{ matrix.node-version }}
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: ['18', '20', '21']
        
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          cache-dependency-path: 'crates/pjs-js-client/package-lock.json'
          
      - name: Install dependencies
        working-directory: crates/pjs-js-client
        run: npm ci
        
      - name: Run linting
        working-directory: crates/pjs-js-client
        run: npm run lint
        
      - name: Run type checking
        working-directory: crates/pjs-js-client
        run: npm run typecheck
        
      - name: Run tests
        working-directory: crates/pjs-js-client
        run: npm run test:ci
        
      - name: Upload coverage to Codecov
        if: matrix.node-version == '18'
        uses: codecov/codecov-action@v3
        with:
          file: crates/pjs-js-client/coverage/lcov.info
          flags: javascript
          name: javascript-client

  build:
    name: Build Package
    runs-on: ubuntu-latest
    needs: test
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: 'crates/pjs-js-client/package-lock.json'
          
      - name: Install dependencies
        working-directory: crates/pjs-js-client
        run: npm ci
        
      - name: Build package
        working-directory: crates/pjs-js-client
        run: npm run build
        
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist-files
          path: crates/pjs-js-client/dist/
          retention-days: 7

  publish:
    name: Publish to NPM
    runs-on: ubuntu-latest
    needs: [test, build]
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/js-client-v')
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          registry-url: ${{ env.REGISTRY_URL }}
          cache: 'npm'
          cache-dependency-path: 'crates/pjs-js-client/package-lock.json'
          
      - name: Install dependencies
        working-directory: crates/pjs-js-client
        run: npm ci
        
      - name: Build package
        working-directory: crates/pjs-js-client
        run: npm run build
        
      - name: Extract version from tag
        id: extract_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/js-client-v}" >> $GITHUB_OUTPUT
        
      - name: Update package version
        working-directory: crates/pjs-js-client
        run: npm version ${{ steps.extract_version.outputs.VERSION }} --no-git-tag-version
        
      - name: Publish to NPM (stable)
        if: '!contains(steps.extract_version.outputs.VERSION, ''alpha'') && !contains(steps.extract_version.outputs.VERSION, ''beta'') && !contains(steps.extract_version.outputs.VERSION, ''rc'')'
        working-directory: crates/pjs-js-client
        run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          
      - name: Publish to NPM (prerelease)
        if: 'contains(steps.extract_version.outputs.VERSION, ''alpha'') || contains(steps.extract_version.outputs.VERSION, ''beta'') || contains(steps.extract_version.outputs.VERSION, ''rc'')'
        working-directory: crates/pjs-js-client
        run: npm publish --access public --tag next
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  security:
    name: Security Audit
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: 'crates/pjs-js-client/package-lock.json'
          
      - name: Install dependencies
        working-directory: crates/pjs-js-client
        run: npm ci
        
      - name: Run security audit
        working-directory: crates/pjs-js-client
        run: npm audit --audit-level=high
        
      - name: Check for known vulnerabilities
        working-directory: crates/pjs-js-client
        run: npx better-npm-audit audit