[package]
name = "pjson-rs"
version.workspace = true
authors.workspace = true
edition.workspace = true
rust-version.workspace = true
license.workspace = true
repository.workspace = true
description = "Priority JSON Streaming Protocol - high-performance priority-based JSON streaming"
keywords.workspace = true
categories.workspace = true
publish = true

[dependencies]
# Core
bytes.workspace = true
serde = { workspace = true, features = ["derive"] }
serde_json.workspace = true
bitflags.workspace = true
thiserror.workspace = true
tracing.workspace = true

# Performance
smallvec = { workspace = true, features = ["serde"] }
ahash.workspace = true

# SIMD JSON parsing
sonic-rs = "0.5"

# Async
futures.workspace = true
async-trait.workspace = true

# Time and IDs
chrono.workspace = true
uuid.workspace = true

# HTTP server integration
axum.workspace = true
tower.workspace = true
tower-http.workspace = true
hyper.workspace = true

# Thread-safe concurrency
parking_lot.workspace = true

# HTTP client and metrics (optional)
reqwest = { workspace = true, optional = true }
prometheus = { workspace = true, optional = true }

[dev-dependencies]
criterion.workspace = true
proptest.workspace = true
serde_json.workspace = true
tokio = { workspace = true, features = ["test-util"] }

[features]
default = ["simd-auto"]

# SIMD features
simd-auto = []   # Auto-detect best SIMD
simd-sse42 = []  # SSE 4.2 support
simd-avx2 = []   # AVX2 support  
simd-avx512 = [] # AVX-512 support
simd-neon = []   # ARM NEON support

# Optional features (will be added later)
# gpu = ["dep:cudarc", "dep:wgpu"]
schema-validation = []
compression = []

# Infrastructure features
http-client = ["dep:reqwest"]
prometheus-metrics = ["dep:prometheus"]

# Benchmarks will be implemented later
# [[bench]]
# name = "simd_parsing"
# harness = false
# 
# [[bench]]
# name = "memory_pools"
# harness = false
