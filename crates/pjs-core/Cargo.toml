[package]
name = "pjson-rs"
version.workspace = true
authors.workspace = true
edition.workspace = true
rust-version.workspace = true
license.workspace = true
repository.workspace = true
description = "Priority JSON Streaming Protocol - high-performance priority-based JSON streaming"
keywords.workspace = true
categories.workspace = true
readme.workspace = true
exclude = ["/target", "/benches", "/tests", "examples/*"]
publish = true

[dependencies]
# Core
bytes = { workspace = true }
serde = { workspace = true, features = ["derive"] }
serde_json = { workspace = true }
bitflags = { workspace = true }
thiserror = { workspace = true }
tracing = { workspace = true }

# Performance
smallvec = { workspace = true, features = ["serde"] }

# SIMD JSON parsing
sonic-rs = { workspace = true }

# Utilities
maplit = { workspace = true }
priority-queue = { workspace = true }

# Async
async-trait = { workspace = true }
async-std = { workspace = true, features = ["attributes"] }
tokio = { workspace = true, features = ["full"] }

# Time and IDs
chrono = { workspace = true, features = ["serde"] }
uuid = { workspace = true, features = ["v4", "serde"] }

# Cryptographic hashing
sha2 = { workspace = true }

# HTTP server integration (optional)
axum = { workspace = true, optional = true, features = ["ws"] }
tower = { workspace = true, optional = true }
tower-http = { workspace = true, features = ["cors", "trace"], optional = true }
futures = { workspace = true, optional = true }

# WebSocket client (optional)
tokio-tungstenite = { workspace = true, optional = true }
url = { workspace = true, optional = true }

# Thread-safe concurrency
parking_lot = { workspace = true }

# HTTP client and metrics (optional)
reqwest = { workspace = true, features = ["json"], optional = true }
prometheus = { workspace = true, optional = true }

[dev-dependencies]
serde_json = { workspace = true }
tokio = { workspace = true, features = ["test-util"] }

[features]
default = ["simd-auto"]

# SIMD features
simd-auto = []   # Auto-detect best SIMD
simd-sse42 = []  # SSE 4.2 support
simd-avx2 = []   # AVX2 support  
simd-avx512 = [] # AVX-512 support
simd-neon = []   # ARM NEON support

# Optional features (will be added later)
# gpu = ["dep:cudarc", "dep:wgpu"]
schema-validation = []
compression = []

# Infrastructure features
http-server = [
    "dep:axum",
    "dep:tower",
    "dep:tower-http",
    "dep:futures",
]
websocket-client = ["dep:tokio-tungstenite", "dep:url"]
websocket-server = [
    "http-server",
] # WebSocket server requires HTTP server features
http-client = ["dep:reqwest"]
prometheus-metrics = ["dep:prometheus"]

[package.metadata.cargo-udeps.ignore]
normal = ["axum", "tower", "tower-http", "hyper", "futures"]

[[example]]
name = "simple_priority_demo"
required-features = []

[[example]]
name = "zero_copy_demo"
required-features = []

# TODO: Fix websocket_streaming example after infrastructure module fixes
# [[example]]
# name = "websocket_streaming"
# required-features = ["http-server"]

# Benchmarks will be implemented later
# [[bench]]
# name = "simd_parsing"
# harness = false
# 
# [[bench]]
# name = "memory_pools"
# harness = false
